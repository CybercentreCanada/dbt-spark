trigger:
  batch: true
  branches:
    include:
      - cccs/*

pr:
  branches:
    include:
      - cccs/main

parameters:
  - name: forceBuildPython
    displayName: Force build Python artifact & push to feed
    type: boolean
    default: false

variables:
  tag: "$(Build.BuildId)"
  pythonArtifactName: "dbt-spark-cccs"
  pythonVersion: "3.10"
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/cccs/main')]

pool: cybertron-build-pool

stages:
  - stage: Test
    jobs:
      - job: UnitTests
        strategy:
          matrix:
            python3_10:
              python.version: "3.10"
        steps:
          - script: |
              virtualenv -p python$(pythonVersion) env
              . env/bin/activate
              pip install --upgrade pip
              pip install --no-cache-dir -e . setuptools==70.1.0
              pip install --no-cache-dir -r dev-requirements.txt -r requirements.txt
            displayName: Install dbt-spark-hogwarts
            workingDirectory: $(Pipeline.Workspace)/s
          - script: |
              . env/bin/activate
              python -m tox -e unit
            workingDirectory: $(Pipeline.Workspace)/s
            displayName: Test
  - stage: Build_and_push
    jobs:
      - job: Build
        workspace:
          clean: all
        steps:
          # Version is explicitly set to 1.
          - script: |
              # Determine the value of dev based on the branch name
              if [ "$(Build.SourceBranch)" == "refs/heads/cccs/main" ]; then
                dev=""
              else
                dev="dev"
              fi
          
              virtualenv -p python$(pythonVersion) env
              source env/bin/activate
              pip install wheel setuptools==70.1.0
              pip install -r requirements.txt 
              # Version explicitly set to 1.4.9 until we move to dbt-core 1.6.0 and above
              # where the version of this package will be <dbt-core-version>.<seq-build-id>
              # VERSION=$(python setup.py --version).${dev}$(tag)
              VERSION=1.4.9.${dev}$(tag)
              DBT_SPARK_PACKAGE_VERSION=${VERSION} python setup.py sdist bdist_wheel
            displayName: "Install and Build."
          - task: CopyFiles@2
            inputs:
              targetFolder: $(Build.ArtifactStagingDirectory)
            displayName: "Stage build artifact to publish"
          - task: PublishBuildArtifacts@1
            displayName: Publish build artifacts
            inputs:
              pathtoPublish: "$(Build.ArtifactStagingDirectory)/dist"
              artifactName: "python_dist"
              publishLocation: "Container"
      - job: Publish
        dependsOn: Build
        condition: or(eq(variables.isMaster, true), eq('${{ parameters.forceBuildPython }}', true))
        workspace:
          clean: all
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              downloadType: "specific"
              downloadPath: "$(Pipeline.Workspace)"
            displayName: "Download build artifact."
          - script: |
              virtualenv -p python$(pythonVersion) env
              source env/bin/activate
              pip install twine
              python -m twine upload -r pypi-ap --config-file /azp/pypirc/pypirc $(Pipeline.Workspace)/python_dist/*
            displayName: "Publish artifact to BagOfHolding."
